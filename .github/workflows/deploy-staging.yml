name: Deploy to Staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Run only one deployment at a time
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v3

      - name: üåê Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üöÄ Compile Frontend stuff
        run: |
          npm run build
          cp public/build/manifest.json storage/app/manifest.json

      - name: üîß Minify JavaScript and CSS
        run: |
          npm install -g uglify-js uglifycss
          # Minifiziere JavaScript-Dateien im Verzeichnis public/asset/js
          find public/asset/js -name '*.js' -exec sh -c 'uglifyjs "$1" -o "$1"' _ {} \; || true
          # Minifiziere CSS-Dateien im Verzeichnis public/asset/css
          find public/asset/css -name '*.css' -exec sh -c 'uglifycss "$1" > "$1.min" && mv "$1.min" "$1"' _ {} \; || true
          
      - name: üêò Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: üì¶ Install PHP dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: üìã Copy .env.example to .env
        run: cp .env.example .env

      - name: üîß Replace environment variables in .env
        run: |
          sed -i 's#^APP_ENV=.*#APP_ENV=staging#' .env
          sed -i 's#^APP_DEBUG=.*#APP_DEBUG=true#' .env
          sed -i 's#^APP_NAME=.*#APP_NAME="StudyGenie - Staging"#' .env
          sed -i 's#^APP_URL=.*#APP_URL=${{ secrets.STAGING_APP_URL }}#' .env
          sed -i 's#^DB_HOST=.*#DB_HOST=${{ secrets.STAGING_DB_HOSTNAME }}#' .env
          sed -i 's#^DB_DATABASE=.*#DB_DATABASE=${{ secrets.STAGING_DB_DBNAME }}#' .env
          sed -i 's#^DB_USERNAME=.*#DB_USERNAME=${{ secrets.STAGING_DB_USERNAME }}#' .env
          sed -i 's#^DB_PASSWORD=.*#DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}#' .env
          sed -i 's#^MAIL_PASSWORD=.*#MAIL_PASSWORD=${{ secrets.STUDYGENIE_MAIL_PASSWORD }}#' .env
          sed -i 's#^OPENAI_API_KEY=.*#OPENAI_API_KEY="${{ secrets.OPENAI_APIKEY }}"#' .env
          sed -i 's#^PAYPAL_MODE=.*#PAYPAL_MODE=sandbox#' .env
          sed -i 's#^PAYPAL_CLIENT_ID=.*#PAYPAL_CLIENT_ID=${{ secrets.STAGING_PAYPAL_CLIENT_ID }}#' .env
          sed -i 's#^PAYPAL_SECRET=.*#PAYPAL_SECRET=${{ secrets.STAGING_PAYPAL_SECRET }}#' .env
          sed -i 's#^PAYPAL_GOLD_PLAN_ID=.*#PAYPAL_GOLD_PLAN_ID=${{ secrets.PAYPAL_GOLD_PLAN_ID }}#' .env
          sed -i 's#^PAYPAL_DIAMANT_PLAN_ID=.*#PAYPAL_DIAMANT_PLAN_ID=${{ secrets.PAYPAL_DIAMANT_PLAN_ID }}#' .env
          sed -i 's#^GOOGLE_CLIENT_ID=.*#GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}#' .env
          sed -i 's#^GOOGLE_CLIENT_SECRET=.*#GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}#' .env
          sed -i 's#^GOOGLE_REDIRECT_URI=.*#GOOGLE_REDIRECT_URI=${{ secrets.STAGING_GOOGLE_REDIRECT_URI }}#' .env
          sed -i 's#^PAYPAL_WEBHOOK_ID=.*#PAYPAL_WEBHOOK_ID=${{ secrets.PAYPAL_WEBHOOK_ID }}#' .env

      - name: üîê Run Laravel specific commands
        run: |
          php artisan key:generate

      - name: üöß Maintenance Mode ON
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd staging.studygenie.de/
            php8.2-cli artisan down

      - name: üóÑÔ∏è Backup Application
        uses: appleboy/ssh-action@v1.0.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd staging.studygenie.de/
            php8.2-cli artisan backup:run

      - name: üßπ Empty remote directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd staging.studygenie.de/
            rm -rf * .env

      - name: üì§ Deploy to Staging Server via SFTP
        env:
          FTP_USERNAME: ${{ secrets.STAGING_FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.STAGING_FTP_PASSWORD }}
          FTP_SERVER: ${{ secrets.STAGING_FTP_SERVER }}
        run: node ftp-deploy.js

      - name: üñ•Ô∏è Executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd staging.studygenie.de/

            mkdir -p storage/framework/cache/data
            mkdir -p storage/framework/sessions
            mkdir -p storage/framework/views
            mkdir -p storage/framework/testing
            mkdir -p storage/logs

            php8.2-cli -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php8.2-cli composer-setup.php
            php8.2-cli -r "unlink('composer-setup.php');"

            php8.2-cli composer.phar install
            php8.2-cli artisan key:generate
            php8.2-cli artisan cache:clear
            php8.2-cli artisan config:cache
            php8.2-cli artisan route:cache
            php8.2-cli artisan view:cache
            php8.2-cli artisan migrate:fresh --seed --force || (php8.2-cli artisan migrate:fresh --force && php8.2-cli artisan db:seed --force)
            cp storage/app/manifest.json public/build/manifest.json
            php8.2-cli artisan config:cache
            php8.2-cli artisan route:cache
            php8.2-cli artisan view:cache

      - name: üü¢ Maintenance Mode OFF
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd staging.studygenie.de/
            php8.2-cli artisan up
